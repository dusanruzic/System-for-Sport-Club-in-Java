/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import nit.PokretanjeServera;

import server.Server;

/**
 *
 * @author Milena
 */
public class ServerskaForma extends javax.swing.JFrame {
   
    PokretanjeServera ps;
    /**
     * Creates new form ServerskaForma
     */
    public ServerskaForma() {
        initComponents();
        jmPodesiKong.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MenuServer = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmPokreniServer = new javax.swing.JMenuItem();
        jmZaustaviServer = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmPodesiKong = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server Settings");

        jMenu1.setText("Server");

        jmPokreniServer.setText("Pokreni server");
        jmPokreniServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmPokreniServerActionPerformed(evt);
            }
        });
        jMenu1.add(jmPokreniServer);

        jmZaustaviServer.setText("Zaustavi server");
        jmZaustaviServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmZaustaviServerActionPerformed(evt);
            }
        });
        jMenu1.add(jmZaustaviServer);

        MenuServer.add(jMenu1);

        jMenu2.setText("Konfiguracija");

        jmPodesiKong.setText("Podesi");
        jmPodesiKong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmPodesiKongActionPerformed(evt);
            }
        });
        jMenu2.add(jmPodesiKong);

        MenuServer.add(jMenu2);

        setJMenuBar(MenuServer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmPokreniServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmPokreniServerActionPerformed
        try {
            ps = new PokretanjeServera(this);
            ps.start();
            System.out.println("Cekamo...");
            //obavestiDaJeServerPokrenut();
            jmPodesiKong.setEnabled(true);
        } catch (Exception ex) {
            Logger.getLogger(ServerskaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jmPokreniServerActionPerformed

    private void jmZaustaviServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmZaustaviServerActionPerformed
        
       try {
           ps.kaziImDaJeServerZaustavljen();
       } catch (IOException ex) {
           Logger.getLogger(ServerskaForma.class.getName()).log(Level.SEVERE, null, ex);
       }
          ps.interrupt();
          obavestiDaJeServerZaustavljen();
            
       
    }//GEN-LAST:event_jmZaustaviServerActionPerformed

    private void jmPodesiKongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmPodesiKongActionPerformed
        FrmKonfiguracija konfig= new FrmKonfiguracija();
        konfig.setVisible(true);
       
    }//GEN-LAST:event_jmPodesiKongActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MenuServer;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jmPodesiKong;
    private javax.swing.JMenuItem jmPokreniServer;
    private javax.swing.JMenuItem jmZaustaviServer;
    // End of variables declaration//GEN-END:variables

    public void obavestiDaJeServerPokrenut() {
        JOptionPane.showMessageDialog(this,"Server je pokrenut");
    }

    public void obavestiDaJeServerZaustavljen() {
        JOptionPane.showMessageDialog(this, "Server soket je zatvoren");
    }

   
}
