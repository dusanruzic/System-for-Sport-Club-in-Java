/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Sport;
import domen.Tim;
import domen.Trener;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import logika.Controler;
import domen.IGeneralEntity;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import modeli.ModelTabeleTimovi;
import sesija.Session;

/**
 *
 * @author duler
 */
public class KreirajNoviTimMenadzerForma extends javax.swing.JDialog {

    /**
     * Creates new form KreirajNoviTimMenadzerForma
     */
    public KreirajNoviTimMenadzerForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        popuniKomboSportova();
        popuniKomboTreneri();
        
        popuniTabeluTimovi();
        
        btnSacuvajTim.setEnabled(false);
        btnOdustani.setEnabled(false);
        txtRBTima.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNazivTima = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbTrener = new javax.swing.JComboBox();
        btnSacuvajTim = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cmbSport = new javax.swing.JComboBox();
        btnKreiraj = new javax.swing.JButton();
        btnOdustani = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtRBTima = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTimovi = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Kreiraj tim");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Kreiraj novi tim"));

        jLabel1.setText("Naziv tima:");

        jLabel2.setText("Trener:");

        cmbTrener.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSacuvajTim.setText("Sacuvaj tim");
        btnSacuvajTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajTimActionPerformed(evt);
            }
        });

        jLabel3.setText("Sport:");

        cmbSport.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSport.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSportItemStateChanged(evt);
            }
        });
        cmbSport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSportActionPerformed(evt);
            }
        });

        btnKreiraj.setText("Kreiraj novi tim");
        btnKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajActionPerformed(evt);
            }
        });

        btnOdustani.setText("Odustani");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        jLabel4.setText("RB. tima");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(180, Short.MAX_VALUE)
                .addComponent(btnOdustani)
                .addGap(301, 301, 301))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSacuvajTim)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(64, 64, 64)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNazivTima)
                            .addComponent(cmbTrener, 0, 242, Short.MAX_VALUE)
                            .addComponent(cmbSport, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtRBTima))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnKreiraj)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKreiraj)
                    .addComponent(jLabel4)
                    .addComponent(txtRBTima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNazivTima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbSport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbTrener, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSacuvajTim)
                    .addComponent(btnOdustani))
                .addGap(73, 73, 73))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Spisak zapamcenih timova"));

        tblTimovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblTimovi);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(93, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbSportItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSportItemStateChanged
        popuniKomboTreneri();
    }//GEN-LAST:event_cmbSportItemStateChanged

    private void btnSacuvajTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajTimActionPerformed
        String nazivTima = txtNazivTima.getText();
        if(!nazivTima.isEmpty()){
            try {
                Trener trener = (Trener) cmbTrener.getSelectedItem();
                System.out.println(trener.getSifraTrenera());
                
                int redniBroj = Controler.getInstanca().poslednjiRBTima();
                Tim tim = new Tim(redniBroj, nazivTima, 0, 0, 0, true, trener);
                Tim t=null;
                try {
                    
                    
                    t = Controler.getInstanca().zapamtiTim(tim);
                    
                } catch (Exception ex) {
                    Logger.getLogger(KreirajNoviTimMenadzerForma.class.getName()).log(Level.SEVERE, null, ex);
                }
                if(t != null){ 
                    ModelTabeleTimovi mttimovi = (ModelTabeleTimovi) tblTimovi.getModel();
                    mttimovi.dodajTim(t);
                    JOptionPane.showMessageDialog(this, "Sistem je uspesno zapamtio novi tim!");
                    
                    btnSacuvajTim.setEnabled(false);
                    btnKreiraj.setEnabled(true);
                    txtNazivTima.setText("");
                   

                    
                }
                else {
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti novi tim");
                }
            } catch (Exception ex) {
                Logger.getLogger(KreirajNoviTimMenadzerForma.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else {
            JOptionPane.showMessageDialog(this, "Unesi naziv tima");
        }
    }//GEN-LAST:event_btnSacuvajTimActionPerformed

    private void cmbSportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSportActionPerformed

    private void btnKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajActionPerformed
        try {
            btnKreiraj.setEnabled(false);
            Tim novi = new Tim();
            int broj = Controler.getInstanca().poslednjiRBTima();
            int RB = broj + 1;
            txtRBTima.setText("" + RB);
            //System.out.println("POslednji broj " + broj);
            novi.setSifraTima(RB);
            
            
            Tim tim = Controler.getInstanca().kreirajTim(novi);
            btnSacuvajTim.setEnabled(true);
            btnOdustani.setEnabled(true);
            if (tim != null){
                JOptionPane.showMessageDialog(this, "Sistem je uspesno kreirao novi tim");
            }
            else {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da kreira novi tim");

            }
            
        } catch (Exception ex) {
            Logger.getLogger(KreirajNoviTimMenadzerForma.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnKreirajActionPerformed

    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
        try {
            // TODO add your handling code here:
            int sifra = Controler.getInstanca().poslednjiRBTima();
            
            System.out.println("POSLEDNJI TIM: " + sifra);
            //Tim t = (Tim) Controler.getInstanca().pronadjiTim(sifra);
            
            Tim tim = new Tim(sifra);
            Controler.getInstanca().obrisiTim(tim);
            this.dispose();
        } catch (Exception ex) {
            Logger.getLogger(KreirajNoviTimMenadzerForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnOdustaniActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKreiraj;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JButton btnSacuvajTim;
    private javax.swing.JComboBox cmbSport;
    private javax.swing.JComboBox cmbTrener;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTimovi;
    private javax.swing.JTextField txtNazivTima;
    private javax.swing.JTextField txtRBTima;
    // End of variables declaration//GEN-END:variables

    private void popuniKomboSportova() {
        ArrayList<Sport> listaSportova = new ArrayList<>();
        cmbSport.removeAllItems();
        try {
            listaSportova = Controler.getInstanca().vratiSveSportove();
        } catch (Exception ex) {
            Logger.getLogger(KreirajNoviTimMenadzerForma.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(listaSportova);
        for (IGeneralEntity sport : listaSportova) {
            cmbSport.addItem(sport);
        }
    }

    private void popuniKomboTreneri() {
        Sport sport = (Sport) cmbSport.getSelectedItem();
        if (sport != null) {
            ArrayList<Trener> listaTrenera = new ArrayList<>();
            cmbTrener.removeAllItems();
            
            try {
                listaTrenera = Controler.getInstanca().vratiTrenereSporta(sport);
            } catch (Exception ex) {
                Logger.getLogger(KreirajNoviTimMenadzerForma.class.getName()).log(Level.SEVERE, null, ex);
            }

            for (Trener trener : listaTrenera) {
                System.out.println(trener + "   " + trener.getSifraTrenera());
                cmbTrener.addItem(trener);
                
            }
        }

    }

    private void popuniTabeluTimovi() {
        ModelTabeleTimovi mtt = new ModelTabeleTimovi();
        tblTimovi.setModel(mtt);
    }
}
